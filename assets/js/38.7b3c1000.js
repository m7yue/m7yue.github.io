(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{398:function(t,e,s){"use strict";s.r(e);var a=s(44),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"https"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" HTTPS")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/http/https1.jpg",alt:"image"}})]),t._v(" "),s("p",[t._v("HTTP 有着一个致命的缺陷，那就是内容是明文传输的，没有经过任何加密，而这些明文数据会经过WiFi、路由器、运营商、机房等多个物理设备节点，如果在这中间任意一个节点被监听，传输的内容就会完全暴露，，这一攻击手法叫做MITM（Man In The Middle）中间人攻击")]),t._v(" "),s("h3",{attrs:{id:"https实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#https实现原理"}},[t._v("#")]),t._v(" HTTPS实现原理")]),t._v(" "),s("p",[t._v("HTTPS其实就是将HTTP的数据包再通过SSL/TLS加密后传输"),s("br"),t._v("\nSSL（Secure Sockets Layer）安全套接层和TLS（Transport Layer Security）传输层安全协议其实是一套东西。")]),t._v(" "),s("h3",{attrs:{id:"工作流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工作流程"}},[t._v("#")]),t._v(" 工作流程")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/http/https2.jpg",alt:"image"}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("用户在浏览器发起HTTPS请求（如 juejin.im/），默认使用服务端的443端口进行连接；")])]),t._v(" "),s("li",[s("p",[t._v("HTTPS需要使用一套CA数字证书，证书内会附带一个公钥Pub，而与之对应的私钥Private保留在服务端不公开；")])]),t._v(" "),s("li",[s("p",[t._v("服务端收到请求，返回配置好的包含公钥Pub的证书给客户端；")])]),t._v(" "),s("li",[s("p",[t._v("客户端收到证书，校验合法性，主要包括是否在有效期内、证书的域名与请求的域名是否匹配，上一级证书是否有效（递归判断，直到判断到系统内置或浏览器配置好的根证书），如果不通过，则显示HTTPS警告信息，如果通过则继续；")])]),t._v(" "),s("li",[s("p",[t._v("客户端生成一个用于对称加密的随机Key，并用证书内的公钥Pub进行加密，发送给服务端；")])]),t._v(" "),s("li",[s("p",[t._v("服务端收到随机Key的密文，使用与公钥Pub配对的私钥Private进行解密，得到客户端真正想发送的随机Key；")])]),t._v(" "),s("li",[s("p",[t._v("服务端使用客户端发送过来的随机Key对要传输的HTTP数据进行对称加密，将密文返回客户端；")])]),t._v(" "),s("li",[s("p",[t._v("客户端使用随机Key对称解密密文，得到HTTP数据明文；")])]),t._v(" "),s("li",[s("p",[t._v("后续HTTPS请求使用之前交换好的随机Key进行对称加解密。")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);