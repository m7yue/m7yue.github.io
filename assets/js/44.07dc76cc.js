(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{404:function(t,a,v){"use strict";v.r(a);var s=v(44),l=Object(s.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"性能优化汇总"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#性能优化汇总"}},[t._v("#")]),t._v(" 性能优化汇总")]),t._v(" "),v("h2",{attrs:{id:"影响性能的关键因子"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#影响性能的关键因子"}},[t._v("#")]),t._v(" 影响性能的关键因子")]),t._v(" "),v("ul",[v("li",[t._v("延时/RTT "),v("code",[t._v("传输延时、处理延时、拥塞延时")])]),t._v(" "),v("li",[t._v("带宽")]),t._v(" "),v("li",[t._v("DNS 解析时间")]),t._v(" "),v("li",[t._v("TCP/TLS 建立连接")]),t._v(" "),v("li",[t._v("静态资源")])]),t._v(" "),v("h2",{attrs:{id:"性能改进"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#性能改进"}},[t._v("#")]),t._v(" 性能改进")]),t._v(" "),v("ul",[v("li",[t._v("确定方向")]),t._v(" "),v("li",[t._v("指定目标")]),t._v(" "),v("li",[t._v("解决问题")]),t._v(" "),v("li",[t._v("持续监控")])]),t._v(" "),v("h2",{attrs:{id:"方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),v("h3",{attrs:{id:"优化延迟"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#优化延迟"}},[t._v("#")]),t._v(" 优化延迟")]),t._v(" "),v("ul",[v("li",[t._v("CDN：服务器的物理距离越近，延时越低")]),t._v(" "),v("li",[t._v("Cache:\n"),v("ul",[v("li",[t._v("缓存是最快的，比任何服务器/CDN都快")]),t._v(" "),v("li",[t._v("通过 Cache-control  HTTP 标头合理制定缓存")]),t._v(" "),v("li",[t._v("真正的静态元素也许可以被设置为永远可用")]),t._v(" "),v("li",[t._v("使用 hash Tag")]),t._v(" "),v("li",[t._v("Etag （也有性能消耗）")])])])]),t._v(" "),v("h3",{attrs:{id:"优化带宽使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#优化带宽使用"}},[t._v("#")]),t._v(" 优化带宽使用")]),t._v(" "),v("ul",[v("li",[t._v("延迟加载资源\n"),v("ul",[v("li",[t._v("懒加载、动态加载")]),t._v(" "),v("li",[t._v('google chrome 75 原生支持懒加载 loadding="lazy"  他不是标准的一部分    content-visibility（css）')]),t._v(" "),v("li",[t._v("提前加载资源")])]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('  渲染 First Contentful Paint 所必须的资源 Document、CSS、Javascript\n  使用preload 引导浏览器更早加载关键资源   rel="preload"\n  Prefetch: 告知浏览器某个资源可能会被使用, 浏览器可以在空闲时间下载这些资源, 用户在真正需要这些资源时，不再需要下载  rel="prefetch"\n')])])]),v("ul",[v("li",[t._v("不加载资源\n"),v("ul",[v("li",[t._v("Cache")])])])])])]),t._v(" "),v("h3",{attrs:{id:"优化资源文件大小"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#优化资源文件大小"}},[t._v("#")]),t._v(" 优化资源文件大小")]),t._v(" "),v("ul",[v("li",[t._v("数据压缩优化  broti(专为http进行优化)、 gzip(通用的)")]),t._v(" "),v("li",[t._v("HTTP 2.0 头文件压缩")]),t._v(" "),v("li",[t._v("代码压缩： 牺牲代码可读性，减少文件体积")]),t._v(" "),v("li",[t._v("Tree Shaking")]),t._v(" "),v("li",[t._v("移除昂贵的库： webpack-bundle-analyzer")])]),t._v(" "),v("h3",{attrs:{id:"dns-优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dns-优化"}},[t._v("#")]),t._v(" DNS 优化")]),t._v(" "),v("ul",[v("li",[t._v("限制 Domain 数量")]),t._v(" "),v("li",[t._v('DNS prefetch  rel="dns-prefetch": 这样我们就可以把其他页面用到的比较频繁的域名也放到首页进行解析， 防止解析阻塞页面渲染影响用户体验。')]),t._v(" "),v("li",[t._v("DNS 缓存")])]),t._v(" "),v("h3",{attrs:{id:"减少-tcp-创建开销"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#减少-tcp-创建开销"}},[t._v("#")]),t._v(" 减少 TCP 创建开销")]),t._v(" "),v("ul",[v("li",[t._v("减少页面重定向：页面重定向非常昂贵")]),t._v(" "),v("li",[t._v("使用 CDN ： 更低的延迟，更小的 TCP 开销")])]),t._v(" "),v("h3",{attrs:{id:"终极方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#终极方法"}},[t._v("#")]),t._v(" 终极方法")]),t._v(" "),v("ul",[v("li",[t._v("HTTP2")])]),t._v(" "),v("h3",{attrs:{id:"渲染和dom操作方面"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#渲染和dom操作方面"}},[t._v("#")]),t._v(" 渲染和DOM操作方面")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("优化网页渲染：")]),t._v(" "),v("ul",[v("li",[t._v("css的文件放在头部，js文件放在尾部或者尾步")]),t._v(" "),v("li",[t._v("尽量避免內联样式")])])]),t._v(" "),v("li",[v("p",[t._v("DOM操作优化：")]),t._v(" "),v("ul",[v("li",[t._v("减少回流和重绘：")])]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("1. 使用class替代style，减少style的使用\n2. 使用resize、scroll时进行防抖和节流处理，这两者会直接导致回流\n3. 使用visibility替换display: none，因为前者只会引起重绘，后者会引发回流\n4. 批量修改元素时，可以先让元素脱离文档流，等修改完毕后，再放入文档流\n5. 避免触发同步布局事件，我们在获取offsetWidth这类属性的值时，可以使用变量将查询结果存起来，避免多次查询，每次对offset/scroll/client等属性进行查询时都会触发回流\n6. 对于复杂动画效果,使用绝对定位让其脱离文档流，复杂的动画效果会频繁地触发回流重绘，我们可以将动画元素设置绝对定位从而脱离文档流避免反复回流重绘\n7. 放弃传统的操作DOM的方式，基于vue和react 开始数据影响视图模式：mvvm/mvc/vitrual dom/dom diff…\n8. 元素批量修改：文档碎片\n9. CSS3 硬件加速（GPU加速）\n10. 避免在document上直接进行频繁的DOM操作\n")])])]),v("ul",[v("li",[t._v("尽量使用css动画（因为本身css动画比较简单，而且相较于js的复杂动画，浏览器本身对其进行了优化，使用上面不会出现卡顿等问题。）")]),t._v(" "),v("li",[t._v("使用 requestAnimationFrame 代替 setInterval 操作。")]),t._v(" "),v("li",[t._v("适当使用canvas")]),t._v(" "),v("li",[t._v("尽量减少css表达式的使用")]),t._v(" "),v("li",[t._v("使用事件代理")]),t._v(" "),v("li",[t._v("移动端：")])]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("  长列表滚动优化\n  函数防抖和函数节流\n  使用touchstart、touchend代替click （移动端比较常用的操作。click在移动端会有300ms延时。）\n  HTML的viewport设置  （可以防止页面的缩放，来优化性能。）\n  开启GPU渲染加速\n")])])])])])])}),[],!1,null,null,null);a.default=l.exports}}]);